name: Windows CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Restore NuGet packages
      run: dotnet restore ./WebApplication2.sln

    - name: Build
      run: dotnet build ./WebApplication2.sln --configuration Release

  test:
    needs: build
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Test
      run: dotnet test ./WebApplication2.sln --configuration Release --collect:"XPlat Code Coverage"

  deploy:
    needs: test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Publish
      run: dotnet publish ./WebApplication2.sln --configuration Release --output ./publish

    - name: Build Docker Image
      run: docker build -t ubuntu ./publish

    - name: Tag Docker Image
      run: docker tag tanya-repo/ubuntu:latest

    - name: Log in to Docker Hub
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image
      run: docker push tanya-repo/ubuntu:latest

    - name: Deploy to Staging
      run: 
        docker-compose -f docker-compose.staging.yml up -d
        echo "Deployed to staging environment"

    - name: Notify on Deployment Failure
      if: failure()
      run: echo "Deployment to staging failed. Notify the team."
